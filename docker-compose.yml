version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: 200000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 200000000
      KAFKA_FETCH_MESSAGE_MAX_BYTES: 200000000
    networks:
      - kafka-net

  player:
    image: alpine:latest
    container_name: player
    command: ["tail", "-f", "/dev/null"]
    volumes:
      - ./testdata.pcap:/testdata.pcap
    depends_on:
      - kafka
    build:
      context: .
      dockerfile: Dockerfile.player
    networks:
      - kafka-net

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gtp2json-app
    depends_on:
      - kafka
    environment:
      G2J_KAFKABROKER: kafka:9092
      G2J_KAFKATOPIC: gtp_packets
      G2J_INTERFACE: eth0
      G2J_PACKETBUFFERSIZE: 250000
    networks:
      - kafka-net

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    depends_on:
      - kafka
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms32M -Xmx64M"
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge
